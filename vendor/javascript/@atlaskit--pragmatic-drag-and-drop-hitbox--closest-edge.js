import t from"@babel/runtime/helpers/defineProperty";function ownKeys(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var e={top:function top(t,e){return Math.abs(e.y-t.top)},right:function right(t,e){return Math.abs(t.right-e.x)},bottom:function bottom(t,e){return Math.abs(t.bottom-e.y)},left:function left(t,e){return Math.abs(e.x-t.left)}};var r=Symbol("closestEdge");function attachClosestEdge(n,o){var c,a;var l=o.element,u=o.input,i=o.allowedEdges;var s={x:u.clientX,y:u.clientY};var b=l.getBoundingClientRect();var p=i.map((function(t){return{edge:t,value:e[t](b,s)}}));var f=(c=(a=p.sort((function(t,e){return t.value-e.value}))[0])===null||a===void 0?void 0:a.edge)!==null&&c!==void 0?c:null;return _objectSpread(_objectSpread({},n),{},t({},r,f))}function extractClosestEdge(t){var e;return(e=t[r])!==null&&e!==void 0?e:null}export{attachClosestEdge,extractClosestEdge};

